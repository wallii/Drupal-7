<?php

	/** module init function  **/
	function page_feedback_init(){

		//echo "<pre>";
		//print_r(node_load(88038));
		//die;
  
     $que = db_select('page_feedback_table', 'pft');
     $que->fields('pft', array('id'));
     $queResult = $que->execute();
     $row = $queResult->rowCount();
    
     if($row == 0) {
     $menulist = page_feedback_render_menu(menu_tree_all_data('main-menu')); 
     foreach ($menulist as $url => $value) {
		$nid = db_insert('page_feedback_table')
		->fields(array('page_name', 'page_url'))
		->values(array(
		'page_name' => $value,
		'page_url' => trim($url),
		))
		->execute();
		}
    
      } 
	}


	function page_feedback_block_info() {
		$blocks = array();
		$blocks['page_feedback_form'] = array(
		'info' => t('Page Feedback Form Block'),
		);
		return $blocks;
	}
	/**
	* Implements hook_block_view().
	*/
	function page_feedback_block_view($delta = '') {
		$block = array();
		switch ($delta) {
		case 'page_feedback_form':
		$block['subject'] = '';
		$block['content'] = _page_feedback_form_block();
		break;
		}
		return $block;
	}

	function _page_feedback_form_block(){
		drupal_add_js(drupal_get_path('module', 'page_feedback') . '/js/page_feedback.js');
		drupal_add_css(drupal_get_path('module', 'page_feedback') . '/css/page_feedback.css');
		$page_form = drupal_get_form('_page_feedback_form');
		$output = '';
		$output.='<div class="floating-form" id="contact_form">
<div class="contact-opener">Open Feedback Form</div>
    
    
    <div id="contact_body">'.drupal_render($page_form).'</div>
</div>';
		return $output; 
	}

	/** To display the form block for the metadata **/

	/*------ Hook for Metadata Comment to show Comment Title */
	function _page_feedback_form($form, &$form_state){

		global $base_url;
		$current_path = url(current_path(), array('absolute' => TRUE));

		$form['field_subject_feedback'] = array(
		'#type' => 'textfield', 
		'#title' => t('Name'),
		'#size' => 40,
		'#required' => TRUE,
		'#element_validate' => array('field_subject_feedback_element_validate'),
		);
		$form['field_email_feedback'] = array(
		'#type' => 'textfield', 
		'#title' => t('Email'),
		'#size' => 40,
		'#required' => TRUE,
		'#element_validate' => array('field_email_feedback_element_validate')
		);
		$form['field_info_feedback'] = array(
		'#type' => 'textarea', 
		'#title' => t('Give your comments'),
		'#rows' => 3,
		'#cols' => 50,
		'#element_validate' => array('page_feedback_form_front_element_validate'),
		'#resizable' => FALSE,
		'#maxlength' => 1000,
		'#required' => TRUE
		);

		$form['field_cur_path'] = array(
		'#type' => 'hidden', 
		'#title' => t('URL of the page'),
		'#default_value' => $current_path,
		);
		$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
		'#weight' => 50,

		);
		return $form;
	}
	# finction Name  : field_email_feedback_element_validate()
	# dated    : 27-06-2016
	# validate email field 
    function field_email_feedback_element_validate ($element,$form, &$form_state) {
		if (!valid_email_address($element['#value'])) {
		form_error($element, t('Please enter a valid email address.'));
		}	
    }
    # finction Name  : field_subject_feedback_element_validate()
	# dated    : 27-06-2016
	# validate Body field validate
    function field_subject_feedback_element_validate ($element,$form, &$form_state) {
		if(ffv_validate_field($element['#value'], "black_box") == 1 ){
		form_error($element, 'Please enter a valid value in subject field.'); 
		}

    }

	/**
	 * Validates the BMI calculator form
	 */
	function page_feedback_form_validate($form, &$form_state) {
	}

	function page_feedback_ajax_callback($form, $form_state) {
		//print_r($form_state); die;
		$commands = array();
		$commands[] = ajax_command_remove('.messages');
		$errors = form_get_errors(); 
		if( $errors ) {    
		if ($messages = theme('status_messages')){
		$str .= '<div class="metadata_feedback comment_popup" id="information-useful-wrapper">
		<div id="information_feedback_node_form" class="information_feedback_form">
		<div class="tag-form-data">'.drupal_render($form).'</div>
		</div>
		</div>';		
		$commands[] = ajax_command_remove('#information-useful-wrapper'); 
		$commands[] = ajax_command_prepend('#info-useful-wrapper', $str);
		$commands[] = ajax_command_prepend('.information_feedback_form', $messages);
		}
		}else{
		if ($messages = theme('status_messages')){ 
		$commands[] = ajax_command_remove('#information-useful-wrapper'); 
		$commands[] = ajax_command_prepend('#info-useful-wrapper', '<div id="nformation-useful-wrapper" class="information_feedback_form">
		<div class="tag-form-data">'.$messages.'</div></div>');
		}
		}	
		return array('#type' => 'ajax', '#commands' => $commands);
	}

	function _page_feedback_form_submit($form, &$form_state){
		global $user, $base_url;
		$url = $form_state['values']['field_cur_path'];
		//echo "<pre>";
		//print_r($form_state['values']);
		//die;
		//$url = $base_url.'/'.drupal_get_path_alias("taxonomy/term/".$arg2); 
		$node = new stdClass();
		$node->title = $url; 
		$node->type = "page_feedback";
		node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
		$node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
		$node->uid = $user->uid;
		$node->status = 1; //(1 or 0): published or not
		$node->promote = 0; //(1 or 0): promoted to front page
		$node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write
		$node->field_name[$node->language][0]['value'] = $form_state['values']['field_subject_feedback'];
		$node->field_email_feedback[$node->language][0]['email'] = $form_state['values']['field_email_feedback'];
		$node->body[$node->language][0]['value'] = $form_state['values']['field_info_feedback'];
		$node = node_submit($node); // Prepare node for saving
		node_save($node);
        # mail send code start here
        # 27 5 2016
        #
        # get mail id for sending per pag feedback
        #-----------------------------------------
		$dbsel_mail = db_select('page_feedback_table', 'pft1');
		$dbsel_mail->fields('pft1', array('page_email'));
		$dbsel_mail->condition('page_url',trim($url));
		$queResult1 = $dbsel_mail->execute();
		
		$rowcnt = $queResult1->rowCount();
		
		$queResultrw = $queResult1->fetchAssoc();
       
		if(trim($queResultrw['page_email'])){

        $pageemaildg = trim($queResultrw['page_email']);
		} else {
         
        $pageemaildg = variable_get('site_mail');
        
		}
	
		$site_name = variable_get('site_name');
        $feedback = '<html>
					<head>
					  <title>'.$site_name.' Feedback</title>
					</head>
					<body>
						<p>'.$site_name.' Feedback for the Page '.$url.'</p>
						<table>
							
							<tr>
							   <td><h2>Feedback</h2></td>
							</tr>
							<tr>
							   <td>'.$form_state['values']['field_info_feedback'].'</td>
							</tr>
							
						</table>
					</body>
				</html>';
	$params = array(
           'body' => $feedback,
           'subject' => $site_name.' Feedback',
           'headers'=>'simple',
     ); 
        $sent = drupal_mail('pagemyMessageName', 'feedback_msg', $pageemaildg, language_default(), $params, 'no-reply@nic.in', TRUE);
        #  code for acknowledgement  
        #  message
        /*
        if($sent) {
			$acknowledgement_to =  trim($form_state['values']['field_email_feedback']);
			$feedback = '<html>
					<head>
					  <title>Page Feedback Acknowledgement</title>
					</head>
					<body>
					
						<p> Thank you for writing feedback for the page '.$url.' to us on '.date("m  d"). ',' .date('Y').', we appreciate your valuable feedback and your perspective.</br> Your feedback will be dealt by our Web Information manager and you will receive a response shortly.</p>
					</body>
				</html>';
			$params = array(
			   'body' => $feedback,
			   'subject' => "Page Feedback Acknowledgement",
			   'headers'=>'simple',
			);
			$acknowledgement = drupal_mail('pagemyMessageName', 'page_acknowledgement_msg', $acknowledgement_to, language_default(), $params, "no-reply@nic.in", TRUE);

        }
        */
        #code add by nic CMF Team
		drupal_set_message(t('Thank you for your feedback.'));
        drupal_goto(current_path());


	}

	/*
 *	drupal mail looks for a function that matches the first parameter _ mail to build the message
 */	
function pagemyMessageName_mail($key, &$message, $params) {
	$language = $message['language'];
	//print_r($message); die;
	switch ($key) {
		case 'feedback_msg':				
			$message['subject']=t($params['subject']);
			$message['body'][]=$params['body'];
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
		break;
		case 'acknowledgement_msg':				
			$message['subject']=t("Feedback Acknowledgement");
			$message['body'][]=$params['body'];
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
		break;
		case 'page_acknowledgement_msg':				
			$message['subject']=t("Page Feedback Acknowledgement");
			$message['body'][]=$params['body'];
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
		break;
    }
}

	#  function for menu setting configuration in admin
	#  dated  25-5-2016
	# develop by NIC CMF Team
	function page_feedback_menu () {
		$items = array();
		$items['admin/config/development/page-feedback'] = array(
		'title' => 'Page Feedback Email Configuration',
		'page callback' => 'page_feedback_email_comfig',
		'access callback' => 'page_feedback_access',
		'type' => MENU_NORMAL_ITEM,
		);
		$items['admin/config/development/page-feedback/%/delete'] = array(
		'title' => t('Delete expenditure'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('page_feedback_delete_confirm', 2),
		'access callback' => 'page_feedback_access',
		'type' => MENU_NORMAL_ITEM,
		);
		return $items;
	}
	#  function for given permission to menu for acces admin
	# date  25-5-2016
	# develop by NIC CMF Team
	function page_feedback_access($account = NULL) {
	return user_access('administer blocks', $account) && user_access('administer menu', $account);
	}
	#  function  page callback for getting menu form
	#  dated  25-5-2016
	# develop by NIC CMF Team
	function page_feedback_email_comfig() {
	return drupal_get_form('custom_page_feedback_setting_form');     
	}
	#  function  for showing all pages in menu
	#  dated  25-5-2016
	# develop by NIC CMF Team
	function custom_page_feedback_setting_form($form, &$form_state) {
     # all meain menu list
     #...................
     $menulist = page_feedback_render_menu(menu_tree_all_data('main-menu'));
     #...................
     $dbTable = db_select('page_feedback_table', 'pft');
     $dbTable->fields('pft', array('page_name','page_url'));
     $queResult = $dbTable->execute();
     foreach ($queResult as $value) {
	 $datatable[] = $value->page_url;
     }
     foreach ($menulist as $key => $value) {
     	if(!in_array($key, $datatable)) {
         $nid = db_insert('page_feedback_table')
		->fields(array('page_name', 'page_url'))
		->values(array(
		'page_name' => $value,
		'page_url' => trim($key),
		))
		->execute();
 
     	}
      } 
        #.................
     		
	    $form = array();
	    #   form for add page name page url and email id
	    $form['page_feedback_add_page'] = array(
		'#prefix' => '<table>',
		'#suffix' => '</table>',
		'#tree' => TRUE,
		);
		$form['page_feedback_add_page']['page_name'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter Page Name'),
        '#size' => 20,
        '#element_validate' => array('page_feedback_page_name_element_validate'),
        '#prefix' => '<td>',
        '#suffix' => '</td>',
        );
        $form['page_feedback_add_page']['page_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter Page URL'),
		'#size' => 80,
		'#element_validate' => array('page_feedback_page_url_element_validate'),
	    '#prefix' => '<td>',
        '#suffix' => '</td>',
        );
        $form['page_feedback_add_page']['page_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter Page Email Id'),
		'#size' => 20,
		'#element_validate' => array('page_feedback_email_element_validate'),
        '#prefix' => '<td>',
        '#suffix' => '</td>',
        );
        $form['submit_add'] = array(
        '#type' => 'submit',
        '#value' => 'Add Page',
        );


	    #..............................................

		$form['page_feedback_setting'] = array(

		

		'#prefix' => '<table>',
		'#suffix' => '</table>',
		'#tree' => TRUE,
		);

		$form['page_feedback_setting']['header'] = array(
		'#markup' => '<thead>
		<tr>
		<td colspan="4" align="center"><h1>Page Feedback Settings<h1></td>
		</tr>
		<tr>
		<th>Page Name</th>
		<th>Page URL</th>
		<th>Page Email Id</th>
		<th>Action</th>
		</tr>
		</thead>',
		);
        $i=0;
         #....................
         $db2Table = db_select('page_feedback_table', 'pft');
         $db2Table->fields('pft', array('page_name','page_url','page_email','id'));
         $db2Table->orderBy('page_name', 'ASC');
         $que2Result = $db2Table->execute();
         #....................

        foreach ($que2Result as $vl) {
        	
        	
       
        $deleteid =base_path()."admin/config/development/page-feedback/$vl->id/delete";
        $form['page_feedback_setting'][$vl->page_url][$vl->page_name] = array(
        '#prefix' => '<tr>',
        '#suffix' => '</tr>',
        );
        $form['page_feedback_setting'][$vl->page_url][$vl->page_name]['page_name'] = array(
        '#markup' => @$vl->page_name,
        '#prefix' => '<td>',
        '#suffix' => '</td>',
        );

        $form['page_feedback_setting'][$vl->page_url][$vl->page_name]['page_url'] = array(
        '#markup' => @$vl->page_url,
        '#prefix' => '<td>',
        '#suffix' => '</td>',
        );

        $form['page_feedback_setting'][$vl->page_url][$vl->page_name]['textbox'] = array(
        '#type' => 'textfield',
        '#prefix' => '<td>',
        '#value' => @$vl->page_email,
        '#suffix' => '</td>',
        );

        $form['page_feedback_setting'][$vl->page_url][$vl->page_name]['row_delete'] = array(
        '#markup' => '<a href="'.$deleteid.'">delete</a>',
        '#prefix' => '<td>',
        '#suffix' => '</td>',
        );

        $i++;
        
        }


		$form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
        );
       return $form;

	}
	#  function  page_feedback_delete_confirm for delete confirmation
	# develop By NIC CMF Team
	# date 31-5-2016
	function page_feedback_delete_confirm($form, &$form_state, $the_id) {
		
		$form = array();
		$form['the_id'] = array(
		'#type' => 'value',
		'#value' => $the_id,
		);

		$form['page_feedback_table'] = array(
		'#type' => 'value',
		'#value' => arg(4),
		);

		return confirm_form(
		$form,
		t('Are you sure you want to delete this item?'),
		'admin/config/development/page-feedback',
		t('This action cannot be undone.'),
		t('Delete'),
		t('Cancel')
		);
		return $form;
		

	}
	#.  function  Name is page_feedback_delete_confirm_submit
	# develop By NIC CMF Team
    # date :   31 - 5 - 2016
	function page_feedback_delete_confirm_submit($form, &$form_state) {
		$delid = $form_state['values']['page_feedback_table'];

		if(is_numeric($delid)) {
		$num_deleted = db_delete('page_feedback_table');
		$num_deleted->condition('id', $delid);
		$num_deleted->execute();

		drupal_set_message('One Record deleted');
		$form_state['redirect'] = 'admin/config/development/page-feedback'; 
		} else {
		drupal_set_message('Invalid Argument supplied.');
		$form_state['redirect'] = 'admin/config/development/page-feedback';   
		}

	}
	# function 
	# develop By NIC CMF Team
	function custom_page_feedback_setting_form_submit($form, &$form_state) {
		# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
		#
		#  Code start for adding Page configuration 
		#
		# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
		if($form_state['clicked_button']['#value']=='Add Page') {
         
         $pageName = $form_state['input']['page_feedback_add_page']['page_name'];
         $pageUrl = $form_state['input']['page_feedback_add_page']['page_url'];
         $pageEmail = $form_state['input']['page_feedback_add_page']['page_email'];
         
         $adddbinsert = db_insert('page_feedback_table')
		->fields(array('page_name', 'page_url','page_email'))
		->values(array(
		'page_name' => $pageName,
		'page_url' => trim($pageUrl),
		'page_email' => $pageEmail,
		))
		->execute(); 
		if($adddbinsert) {
        drupal_set_message(t('Your configuration Add'));
        drupal_goto(current_path());
		} else {
		drupal_set_message(t('Your configuration not saved please try again'));
        drupal_goto(current_path());	
		}

		}
		# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
		#   
        # end code for adding page configuration
        #
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       // $menulist = page_feedback_render_menu(menu_tree_all_data('main-menu'));
	   foreach ($form_state['input']['page_feedback_setting'] as $url => $value) {
	  	  $inserturl = $url;
	  	  foreach ($value as $pg => $email) {
	  	  	$insertpage = $pg;
	  	  	$insertemail = $email['textbox'];
	  	  }
	  	  #....................
			$dbup = db_update('page_feedback_table') 
                    ->fields(array('page_email' =>$insertemail))
                    ->condition('page_url',$inserturl)
                    ->condition('page_name',$insertpage)
                    ->execute();
	  	  #....................
	  	}
	}
	#  function  page callback for getting menu form
	#  dated  25-5-2016
	# develop by NIC CMF Team
	function page_feedback_render_menu ($menu) {

		global $base_url;
		foreach ($menu as $item) {
		$link = $item["link"];
		if ($link["hidden"]) {
		continue;
		}
		$as = $base_url.check_url(url($link["href"]));
        $output[$as] = $link["title"];
		}
	   return $output;
     
	}
    #  Function For email id Validate
    #  Written By  NIC  CMF TEAM
    #  Date   :  27/5/2016
	function page_feedback_email_element_validate($element, &$form_state, $form) {
		if($form_state['clicked_button']['#value']=='Add Page') {
			if(!empty($element['#value'])) {
			if (!valid_email_address($element['#value'])) {
			form_error($element, t('Please enter a valid email address.'));
			}	
			}	else if(trim(empty($element['#value']))) {
			form_error($element, t('Please enter Email Address.'));
			}
		}
   }
    #  Function For page url Validate
    #  Written By  NIC  CMF TEAM
    #  Date   :  27/5/2016
	function page_feedback_page_url_element_validate($element, &$form_state, $form) {
        if($form_state['clicked_button']['#value']=='Add Page') {
			if(trim(empty($element['#value']))) {

			form_error($element, t('Please enter  Page URL.'));

	        }else if(!preg_match("/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/i",$element['#value'])) {
			form_error($element, t('Please enter Valid Page URL.'));
			}
		}	
   }
    #  Function For page name validate
    #  Written By  NIC  CMF TEAM
    #  Date   :  27/5/2016
	function page_feedback_page_name_element_validate($element, &$form_state, $form) {
		$white_parameter = "\x{900}-\x{97F}\ a-zA-Z0-9 | | ,:'.\-\_\(\)";
        if($form_state['clicked_button']['#value']=='Add Page') {
			if(empty($element['#value'])) {

			 form_error($element, t('Please enter  Page Name .'));

			} else if(is_numeric($element['#value'])) {
	         form_error($element, t('Please enter Valid Page Name .'));
			} 
	   }
   }
   #  Function For page name validate
    #  Written By  NIC  CMF TEAM
    #  Date   :  27/5/2016
   function page_feedback_form_front_element_validate($element, &$form_state, $form) {
  
   if(ffv_validate_field($element['#value'], "black_box") == 1 ){
	form_error($element, 'Please enter a valid value in Comment field.'); 
	}

   }




